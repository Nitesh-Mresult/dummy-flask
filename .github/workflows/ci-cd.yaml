name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List files in app/login directory (for debugging)
        run: ls -la app/login

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: niteshcontainers.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        id: build_image 
        uses: docker/build-push-action@v2
        with:
          context: app/login
          file: app/login/Dockerfile
          push: true
          tags: niteshcontainers.azurecr.io/flask-app:latest

      - name: Set image name
        run: echo "IMAGE_NAME=niteshcontainers.azureuser.io/flask-app:latest" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Set context for AKS
        run: |
          az aks get-credentials --resource-group POC_test --name flask-app

      - name: Verify kubectl context
        run: kubectl config current-context



      - name: Deploy to AKS
        run: |
          kubectl apply -f app/kubernetes/deployment.yaml
          echo "Deploying image: ${{ env.IMAGE_NAME }}"
          kubectl set image deployment/flask-app-deployment flask-app=${{ env.IMAGE_NAME }}
          kubectl apply -f app/kubernetes/my-app-service.yaml
          kubectl apply -f app/kubernetes/my-app-ingress.yaml
