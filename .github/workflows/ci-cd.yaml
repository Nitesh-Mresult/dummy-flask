name: Deploy Flask App to AKS with Terraform

on:
  push:
    branches:
      - main

jobs:
  infrastructure-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Terraform Code
        uses: actions/checkout@v2
        with:
          path: infrastructure/

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.0'

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./infrastructure

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./infrastructure

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./infrastructure

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: infrastructure-deploy

    steps:
      - name: Checkout Flask Application Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: niteshcontainers.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t niteshcontainers.azurecr.io/flask-app:$IMAGE_TAG app/login
          docker push niteshcontainers.azurecr.io/flask-app:$IMAGE_TAG

      - name: Set up AKS credentials
        run: |
          az aks get-credentials --resource-group POC_test --name flask-app-cluster --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f app/kubernetes/deployment.yaml
          kubectl set image deployment/flask-app flask-app=niteshcontainers.azurecr.io/flask-app:${{ github.sha }}
          kubectl apply -f app/kubernetes/my-app-service.yaml
          kubectl apply -f app/kubernetes/my-app-ingress.yaml

      - name: Verify Deployment Status
        run: |
          kubectl rollout status deployment/flask-app-deployment
