name: Deploy Flask App to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from GitHub
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Log in to Azure using Azure credentials from GitHub Secrets
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 4: Login to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: niteshcontainers.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 5: Build and push the Docker image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build -t niteshcontainers.azurecr.io/flask-app:${{ github.sha }} app/login
          docker push niteshcontainers.azurecr.io/flask-app:${{ github.sha }}

      # Step 6: Set up AKS credentials
      - name: Set up AKS credentials
        run: az aks get-credentials --resource-group POC_test --name flask-app

      # Step 7: Verify kubectl context (optional for debugging)
      - name: Verify kubectl context
        run: kubectl config current-context

      # Step 8: Deploy to AKS by updating the image in the deployment
      - name: Deploy to AKS
        run: |
          kubectl apply -f app/kubernetes/deployment.yaml
          kubectl set image deployment/flask-app-deployment flask-container=niteshcontainers.azurecr.io/flask-app:${{ github.sha }}
          kubectl apply -f k8s/my-app-service.yaml
          kubectl apply -f k8s/my-app-ingress.yaml
          
